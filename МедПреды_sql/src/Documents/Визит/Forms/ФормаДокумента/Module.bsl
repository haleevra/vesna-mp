

&НаКлиенте
Процедура ФотоАдресФайлаВоВременномХранилищеНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, Новый Картинка(ПолучитьИзВременногоХранилища(ФотоАдресФайлаВоВременномХранилище)));
КонецПроцедуры

#Область ПроцедурыИФункцииОбщегоНазначения

&НаКлиенте
Процедура СформироватьФормуВизита()
	
	Если Объект.Операция = ПредопределенноеЗначение("Перечисление.ПрофилиМобильногоПриложения.МедПредставитель")Тогда
		Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
			Если ЭтоАптека() Тогда
				СформироватьТоварыИЦены();
			Иначе
				СформироватьЧекЛист();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	УстановитьВидимостьСобытия();
	
КонецПроцедуры

&НаСервере
Функция ЭтоАптека()
	
	ЭтоАптека = (Объект.Контрагент.ВидКонтрагента = ПредопределенноеЗначение("Перечисление.ВидыКонтрагентов.Аптека"));
	Возврат ЭтоАптека;

КонецФункции

&НаСервере
Процедура СформироватьЧекЛист()
	
	ИнициализацияТабличныхЧастей();
	
	Для Каждого ПунктЧекЛиста Из Объект.Проект.ЧекЛист Цикл
		НовыйПункт = Объект.ЧекЛист.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйПункт, ПунктЧекЛиста);
		НовыйПункт.Значение = ПустоеЗначение(НовыйПункт.ТипЗначения);		
	КонецЦикла;
	
КонецПроцедуры

// Описание
// 
// Параметры:
&НаСервере
Процедура ИнициализацияТабличныхЧастей()
	Объект.ЧекЛист.Очистить();
	Объект.Препараты.Очистить();
	Объект.Цены.Очистить();
КонецПроцедуры


&НаСервере
Процедура СформироватьТоварыИЦены()
	
	ИнициализацияТабличныхЧастей();
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПроектыПрепараты.Товар
	|ИЗ
	|	Справочник.Проекты.Препараты КАК ПроектыПрепараты
	|ГДЕ
	|	ПроектыПрепараты.Ссылка = &Проект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПроектыПрепараты.Товар,
	|	ЛОЖЬ КАК Конкурент
	|ИЗ
	|	Справочник.Проекты.Препараты КАК ПроектыПрепараты
	|ГДЕ
	|	ПроектыПрепараты.Ссылка = &Проект
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПроектыКонкуренты.Товар,
	|	ИСТИНА
	|ИЗ
	|	Справочник.Проекты.Конкуренты КАК ПроектыКонкуренты
	|ГДЕ
	|	ПроектыКонкуренты.Ссылка = &Проект
	|
	|УПОРЯДОЧИТЬ ПО
	|	Конкурент"
	;
	Запрос = Новый Запрос(ТекстЗапроса);

	Запрос.УстановитьПараметр("Проект", Объект.Проект);
	
	Результаты = Запрос.ВыполнитьПакет();
	Объект.Препараты.Загрузить(Результаты[0].Выгрузить());
	Объект.Цены.Загрузить(Результаты[1].Выгрузить());
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьСобытия()
	
	Если Объект.Операция = Перечисления.ПрофилиМобильногоПриложения.Супервайзер Тогда
		Элементы.Супервайзер.Видимость = Истина;
		Элементы.МедПредставитель.Видимость = Ложь;
	Иначе
		Если ЗначениеЗаполнено(Объект.Контрагент) Тогда
			ЭтоАптека = ЭтоАптека();
			
			Элементы.СтраницаЧекЛист.Видимость = НЕ ЭтоАптека;
			Элементы.СтраницаПрепараты.Видимость = ЭтоАптека;
			Элементы.СтраницаЦены.Видимость = ЭтоАптека;
			
			Если ЭтоАптека Тогда
				Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
			Иначе
				Если НЕ Элементы.СтраницаФото.Видимость Тогда
					Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
				КонецЕсли;
				ПолучитьПараметры();
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ЗаблокироватьФорму(Заблокировать = Ложь)
	Элементы.ГруппаКолонки.Доступность = Заблокировать;
	Элементы.ВидВизита.Доступность = Заблокировать;
	Элементы.Прокрутка.Доступность = Заблокировать;
	Элементы.ГруппаКоординатыИВремя.Доступность = Заблокировать;
	Элементы.Ответственный.Доступность = Заблокировать;
	Элементы.Операция.Доступность = Заблокировать;
КонецПроцедуры


#КонецОбласти

#Область ДействияКомандныхПанелейФормы

&НаКлиенте
Процедура Справка(Команда)
	
	ПерейтиПоНавигационнойСсылке("http://server.prof-it.ru/redmine/projects/dfgwiki/wiki/Wiki");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Функция ПустоеЗначение(ТипЗначения)
	Если ТипЗначения = "Строка" Тогда
		Возврат "";
	ИначеЕсли ТипЗначения = "Число" Тогда
		Возврат 0;
	ИначеЕсли ТипЗначения = "Дата" Тогда
		Возврат Дата(1,1,1);
	ИначеЕсли ТипЗначения = "Булево" Тогда
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
		
	ДвоичныеДанные = ТекущийОбъект.Картинка.Получить();
	Если ЗначениеЗаполнено(ДвоичныеДанные) Тогда
		ФотоАдресФайлаВоВременномХранилище = ПоместитьВоВременноеХранилище(Новый Картинка(ДвоичныеДанные));
		Элементы.СтраницаФото.Видимость = Истина;
	КонецЕсли;
	
	СсылкаДляПереходаНаКарту = КонтактнаяИнформацияМедПредыКлиентСервер.СтрокаСсылкиПоказатьНаКарте();
				
	Элементы.ГруппаКоординатыИВремя.Видимость = РольДоступна("Заказчик") ИЛИ РольДоступна("Супервайзер") ИЛИ РольДоступна("ПолныеПрава");
	
	КоординатыНачало = ТекущийОбъект.ГеоМеткаНачало.Получить();
	КоординатыОкончание = ТекущийОбъект.ГеоМеткаОкончание.Получить();
	
	Попытка
		
		Широта = ?(ЗначениеЗаполнено(ТекущийОбъект.ШиротаСупервайзер), ТекущийОбъект.ШиротаСупервайзер, МедПредыСервер.Среднее(КоординатыНачало.Широта, КоординатыОкончание.Широта));
		Долгота = ?(ЗначениеЗаполнено(ТекущийОбъект.ДолготаСупервайзер), ТекущийОбъект.ДолготаСупервайзер, МедПредыСервер.Среднее(КоординатыНачало.Долгота, КоординатыОкончание.Долгота)); 	
		
		Если ЗначениеЗаполнено(ТекущийОбъект.ШиротаСупервайзер) Тогда
			ШиротаИсправлено = Истина;
			Элементы.Широта.Доступность = ШиротаИсправлено;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущийОбъект.ДолготаСупервайзер) Тогда
			ДолготаИсправлено = Истина;
			Элементы.Долгота.Доступность = ДолготаИсправлено;
		КонецЕсли;
		
	Исключение
	КонецПопытки;
	
	Если РольДоступна("Заказчик") Тогда
		Элементы.ШиротаИсправлено.Видимость = Ложь;
		Элементы.ДолготаИсправлено.Видимость = Ложь;
		ДанныеРегистра = РегистрыНакопления.ДанныеВизитовДляОтчета.ВыбратьПоРегистратору(ТекущийОбъект.Ссылка);
		Если ДанныеРегистра.Следующий() Тогда
			Широта = ДанныеРегистра.Широта;
			Долгота = ДанныеРегистра.Долгота;
		КонецЕсли;
	КонецЕсли;
		
	УстановитьВидимостьСобытия();
	ЭтаФорма.ТолькоПросмотр = РольДоступна("Заказчик") ИЛИ ((Объект.СостояниеВизита = Перечисления.СостоянияВизитов.Закрыт) И Объект.Проведен И НЕ РольДоступна("ПолныеПрава"));
	
	Если НЕ Объект.СостояниеВизита = Перечисления.СостоянияВизитов.Закрыт Тогда
		Если НЕ РольДоступна("Супервайзер") И НЕ РольДоступна("ПолныеПрава") Тогда
			Элементы.СостояниеВизита.СписокВыбора.Удалить(3);
		КонецЕсли;
	ИначеЕсли Объект.СостояниеВизита = Перечисления.СостоянияВизитов.Выполнен Тогда
		ЗаблокироватьФорму();
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере()
	
	ТекущийОбъект = РеквизитФормыВЗначение("Объект");
	Если ТекущийОбъект.ЭтоНовый() Тогда
		Если РольДоступна("Супервайзер") Тогда
			Объект.Операция =  Перечисления.ПрофилиМобильногоПриложения.Супервайзер;
		КонецЕсли;
		Объект.Ответственный = Пользователи.ТекущийПользователь();
	Иначе
		УстановитьВидимостьСобытия();
	КонецЕсли;

	Элементы.Ответственный.ТолькоПросмотр = НЕ РольДоступна("ПолныеПрава");
	Элементы.Операция.Видимость = РольДоступна("ПолныеПрава");
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("ИзменилсяВизит", Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "СозданНовыйКонтрагент" Тогда
		Объект.Контрагент = Параметр;
		ЭтаФорма.Модифицированность = Истина;
	КонецЕСли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	
	СформироватьФормуВизита();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьВизит(Отказ = Ложь)
	
	//РозничныеПродажиКлиент.ВыполнитьЗакрытиеИОткрытиеСменыЕслиНужно(ЭтаФорма, Отказ);
	Если НЕ Отказ Тогда
		ЗаписатьВизитНаСервере();
		Оповестить("ЗаписанВизит");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВизитНаСервере()
	
	ВизитОбъект = РеквизитФормыВЗначение("Объект");
	ВизитОбъект.Дата = ТекущаяДата();
	ВизитОбъект.ДополнительныеСвойства.Вставить("ПринудительноСформироватьДокументОплаты", Истина);
	ВизитОбъект.Записать();
	ЗначениеВРеквизитФормы(ВизитОбъект, "Объект");
	Модифицированность = Ложь;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьПараметры()
	СтруктураПараметров = Новый Структура;
	Для Каждого СтрокаКлассификации Из Объект.Проект.Классификация Цикл
		СчетчикПараметров = 1;
		Пока Истина Цикл
			Начало = СтрНайти(СтрокаКлассификации.Формула, "[", , , СчетчикПараметров)+1;
			Конец  = СтрНайти(СтрокаКлассификации.Формула, "]", , , СчетчикПараметров);
			Если Начало = 0 Или Конец = 0 Тогда
				Прервать;
			КонецЕсли;
			Параметр = Сред(СтрокаКлассификации.Формула, Начало, Конец-Начало);
			СтруктураПараметров.Вставить(Параметр);
			СчетчикПараметров=СчетчикПараметров+1;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЧекЛистПриИзменении(Элемент)
	РассчитатьКатегориюВрача();
КонецПроцедуры

&НаСервере
Процедура РассчитатьКатегориюВрача()
	Если ОбщегоНазначенияВызовСервера.ВерсияОС() <> "iOS" Тогда
		ОбъектДокумента = РеквизитФормыВЗначение("Объект");
		Для Каждого КлючИЗначение Из СтруктураПараметров Цикл
			СтрокаПараметра = ОбъектДокумента.ЧекЛист.Найти(КлючИЗначение.Ключ, "Пункт");
			Если ЗначениеЗаполнено(СтрокаПараметра) Тогда
				СтруктураПараметров.Вставить(КлючИЗначение.Ключ, СтрокаПараметра.Значение);
			КонецЕсли;
		КонецЦикла;
		Результат = Ложь;
		Для Каждого СтрокаКлассификации Из Объект.Проект.Классификация Цикл
			Формула = СтрЗаменить(СтрокаКлассификации.Формула, "[", "СтруктураПараметров.");
			Формула = СтрЗаменить(Формула, "]", "");
			Результат = Вычислить(Формула);
			Если Результат Тогда
				Объект.КатегорияВрача = СтрокаКлассификации.КатегорияВрача;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьГеоДанные(ДанныеМестоположения, Момент)
	
	ОбъектДляЗаписи = РеквизитФормыВЗначение("Объект");
	ОбъектДляЗаписи["Дата"+Момент]     = МестноеВремя(ДанныеМестоположения.Дата);
	ОбъектДляЗаписи["ГеоМетка"+Момент] = Новый ХранилищеЗначения(ДанныеМестоположения.Координаты);
	ЗначениеВРеквизитФормы(ОбъектДляЗаписи, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	#Если МобильноеПриложениеКлиент Тогда
	ЗаписатьГеоДанные(ПолучитьКоординаты(), "Окончание");
	#КонецЕсли
КонецПроцедуры

#Если МобильноеПриложениеКлиент Тогда
&НаКлиенте
Функция ПолучитьКоординаты()
	ИмяПровайдера = СредстваГеопозиционирования.ПолучитьСамогоТочногоПровайдера().Имя;
	// Если местоположение на данном устройстве ни разу не выполнялось
	// или выполнено более часа назад – обновить местоположение и
	// получить определенные координаты
	Координаты = СредстваГеопозиционирования.ПолучитьПоследнееМестоположение(ИмяПровайдера);
	Если Координаты = Неопределено ИЛИ УниверсальноеВремя(ТекущаяДата())-Координаты.Дата > 900 Тогда
		СредстваГеопозиционирования.ОбновитьМестоположение(ИмяПровайдера, 60);
		Координаты = СредстваГеопозиционирования.ПолучитьПоследнееМестоположение(ИмяПровайдера);
	КонецЕсли;
	
	ДанныеАдреса = ПолучитьАдресПоМестоположению(Координаты.Координаты);
	
	Возврат Координаты;
КонецФункции
#КонецЕсли	

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)

	СформироватьФормуВизита();
	
КонецПроцедуры

&НаКлиенте
Процедура ШиротаИсправленоПриИзменении(Элемент)
	Элементы.Широта.Доступность = ШиротаИсправлено;
КонецПроцедуры

&НаКлиенте
Процедура ДолготаИсправленоПриИзменении(Элемент)
	Элементы.Долгота.Доступность = ДолготаИсправлено;
КонецПроцедуры

&НаКлиенте
Процедура ШиротаПриИзменении(Элемент)
	Объект.ШиротаСупервайзер = Широта;
КонецПроцедуры

&НаКлиенте
Процедура ДолготаПриИзменении(Элемент)
	Объект.ДолготаСупервайзер = Долгота;
КонецПроцедуры

&НаКлиенте
Процедура ПереходНаКартуНажатие(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	КонтактнаяИнформацияМедПредыКлиент.ПоказатьНаКартеНажатие(ЭтотОбъект, Элемент, Формат(Широта, "ЧРД=.; ЧГ=")+","+Формат(Долгота, "ЧРД=.; ЧГ="));
КонецПроцедуры

&НаКлиенте
Процедура СостояниеВизитаПриИзменении(Элемент)
	Если (Объект.СостояниеВизита = ПредопределенноеЗначение("Перечисление.СостоянияВизитов.Выполнен"))
	   ИЛИ (Объект.СостояниеВизита = ПредопределенноеЗначение("Перечисление.СостоянияВизитов.Закрыт")) Тогда
		ЗаблокироватьФорму();
	Иначе
		ЗаблокироватьФорму(Истина);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПриСозданииЧтенииНаСервере();
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
КонецПроцедуры

&НаКлиенте
Процедура ОперацияПриИзменении(Элемент)
	СформироватьФормуВизита();
КонецПроцедуры

&НаСервере
Процедура КонтактноеЛицоПриИзмененииНаСервере()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Визит.Ссылка
	|ИЗ
	|	Документ.Визит КАК Визит
	|ГДЕ
	|	Визит.Проект = &Проект
	|	И Визит.Контрагент = &Контрагент
	|	И Визит.КонтактноеЛицо = &КонтактноеЛицо
	|	И Визит.Дата >= ДОБАВИТЬКДАТЕ(&Дата, ДЕНЬ, -&Цикличность)
	|	И Визит.Операция = ЗНАЧЕНИЕ(Перечисление.ПрофилиМобильногоПриложения.МедПредставитель)"
	;
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Дата", НачалоДня(ТекущаяДата()));
	Запрос.УстановитьПараметр("Проект", Объект.Проект);
	Запрос.УстановитьПараметр("Контрагент", Объект.Контрагент);	
	Запрос.УстановитьПараметр("КонтактноеЛицо", Объект.КонтактноеЛицо);
	Запрос.УстановитьПараметр("Цикличность", Объект.Проект.Цикличность);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Сообщить(СтрШаблон("С предыдущего визита не прошло требуемое количество дней %1", Объект.Проект.Цикличность), СтатусСообщения.Внимание);
		Объект.КонтактноеЛицо = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонтактноеЛицоПриИзменении(Элемент)
	КонтактноеЛицоПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	КонтактноеЛицоПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти