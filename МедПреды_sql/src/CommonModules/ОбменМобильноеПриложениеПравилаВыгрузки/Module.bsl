#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьОбъектXDTO(Данные, КоличествоОбъектов) Экспорт
	
	ПередаваемыйОбъект = Неопределено;
	
	Если ТипЗнч(Данные) = Тип("СправочникОбъект.Контрагенты")
		ИЛИ ТипЗнч(Данные) = Тип("СправочникСсылка.Контрагенты") Тогда
		ПередаваемыйОбъект = СериализацияКонтрагент(Данные, КоличествоОбъектов);
	ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.КонтактныеЛица")
		ИЛИ ТипЗнч(Данные) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
		ПередаваемыйОбъект = СериализацияКонтактноеЛицо(Данные, КоличествоОбъектов);
	ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.СпециализацияВрача")
		ИЛИ ТипЗнч(Данные) = Тип("СправочникСсылка.СпециализацияВрача") Тогда
		ПередаваемыйОбъект = СериализацияСпециализацияВрача(Данные, КоличествоОбъектов);
	ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.Проекты")
		ИЛИ ТипЗнч(Данные) = Тип("СправочникСсылка.Проекты") Тогда
		ПередаваемыйОбъект = СериализацияПроект(Данные, КоличествоОбъектов);
	ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.Товары")
		ИЛИ ТипЗнч(Данные) = Тип("СправочникСсылка.Товары") Тогда
		ПередаваемыйОбъект = СериализацияТовар(Данные, КоличествоОбъектов);
	ИначеЕсли ТипЗнч(Данные) = Тип("СправочникОбъект.ВидыМероприятий")
		ИЛИ ТипЗнч(Данные) = Тип("СправочникСсылка.ВидыМероприятий") Тогда
		ПередаваемыйОбъект = СериализацияВидМероприятия(Данные, КоличествоОбъектов);
	ИначеЕсли ТипЗнч(Данные) = Тип("ДокументОбъект.Визит")
		ИЛИ ТипЗнч(Данные) = Тип("ДокументСсылка.Визит") Тогда
		ПередаваемыйОбъект = СериализацияВизит(Данные, КоличествоОбъектов);
	ИначеЕсли ТипЗнч(Данные) = Тип("ДокументОбъект.Мероприятие")
		ИЛИ ТипЗнч(Данные) = Тип("ДокументСсылка.Мероприятие") Тогда
		ПередаваемыйОбъект = СериализацияМероприятие(Данные, КоличествоОбъектов);
	ИначеЕсли ТипЗнч(Данные) = Тип("ПеречислениеСсылка.ВидыКонтрагентов") ИЛИ
		ТипЗнч(Данные) = Тип("ПеречислениеСсылка.ВидыВизитов") ИЛИ
		ТипЗнч(Данные) = Тип("ПеречислениеСсылка.СостоянияВизитов") ИЛИ 
		ТипЗнч(Данные) = Тип("ПеречислениеСсылка.ПрофилиМобильногоПриложения") Тогда
		ПередаваемыйОбъект = СериализацияПеречисления(Данные, КоличествоОбъектов);
	ИначеЕсли ТипЗнч(Данные) = Тип("ПланОбменаОбъект.МобильноеПриложение") ИЛИ
		ТипЗнч(Данные) = Тип("ПланОбменаСсылка.МобильноеПриложение") Тогда
		ПередаваемыйОбъект = СериализацияНастроек(Данные, КоличествоОбъектов);
	ИначеЕсли ТипЗнч(Данные) = Тип("УдалениеОбъекта") Тогда
		ПередаваемыйОбъект = СериализацияУдалениеОбъекта(Данные, КоличествоОбъектов);
	КонецЕсли;
	
	КоличествоОбъектов = КоличествоОбъектов + 1;
	Возврат ПередаваемыйОбъект;
	
КонецФункции // ПолучитьОбъектXDTO()

#КонецОбласти

#Область Справочники

Функция СериализацияКонтрагент(Данные, КоличествоОбъектов)
	
	ПередаваемыйОбъект = СоздатьОбъектXDTO("Контрагенты");
	ПередаваемыйОбъект.УникальныйИдентификатор = Строка(Данные.Ссылка.УникальныйИдентификатор());
	ПередаваемыйОбъект.Наименование = Данные.Наименование;
	ПередаваемыйОбъект.ПометкаУдаления = Данные.ПометкаУдаления;
	Если ЗначениеЗаполнено(Данные.Родитель) Тогда
		ПередаваемыйОбъект.Родитель = ПолучитьОбъектXDTO(Данные.Родитель, КоличествоОбъектов);
	КонецЕсли;
	Если Данные.ЭтоГруппа Тогда
		ПередаваемыйОбъект.ЭтоГруппа = Истина;
		Возврат ПередаваемыйОбъект;
	Иначе
		ПередаваемыйОбъект.ЭтоГруппа = Ложь;
	КонецЕсли;
	
	ПочтовыйАдресКонтрагента = "";
	ЮрАдресКонтрагента = "";
	ФактАдресКонтрагента = "";
	ПередаваемыйОбъект.Телефон = "";
	ПередаваемыйОбъект.АдресЭП = "";
	ПередаваемыйОбъект.Адрес = "";
	
	Для каждого ТекСтрока Из Данные.КонтактнаяИнформация Цикл
		Если ТекСтрока.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			ПередаваемыйОбъект.Телефон = ТекСтрока.Представление;
		ИначеЕсли ТекСтрока.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес
			И ТекСтрока.Вид = Справочники.ВидыКонтактнойИнформации.ПочтовыйАдресКонтрагента Тогда
			ПочтовыйАдресКонтрагента = ТекСтрока.Представление;
		ИначеЕсли ТекСтрока.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес
			И ТекСтрока.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента Тогда
			ЮрАдресКонтрагента = ТекСтрока.Представление;
		ИначеЕсли ТекСтрока.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес
			И ТекСтрока.Вид = Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента Тогда
			ФактАдресКонтрагента = ТекСтрока.Представление;
		ИначеЕсли ТекСтрока.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
			ПередаваемыйОбъект.АдресЭП = ТекСтрока.Представление;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ПустаяСтрока(ФактАдресКонтрагента) Тогда
		ПередаваемыйОбъект.Адрес = ФактАдресКонтрагента;
	ИначеЕсли НЕ ПустаяСтрока(ПочтовыйАдресКонтрагента) Тогда
		ПередаваемыйОбъект.Адрес = ПочтовыйАдресКонтрагента;
	ИначеЕсли НЕ ПустаяСтрока(ЮрАдресКонтрагента) Тогда
		ПередаваемыйОбъект.Адрес = ЮрАдресКонтрагента;
	КонецЕсли;
	
	ПередаваемыйОбъект.ВидКонтрагента = ПолучитьОбъектXDTO(Данные.ВидКонтрагента, КоличествоОбъектов);
	ПередаваемыйОбъект.Сеть = Данные.Сеть;
	
	
	ПередаваемыйОбъект.Комментарий = Данные.Комментарий;
	
	Возврат ПередаваемыйОбъект;
	
КонецФункции

Функция СериализацияКонтактноеЛицо(Данные, КоличествоОбъектов)
	
	ПередаваемыйОбъект = СоздатьОбъектXDTO("КонтактныеЛица");
	ПередаваемыйОбъект.УникальныйИдентификатор = Строка(Данные.Ссылка.УникальныйИдентификатор());
	ПередаваемыйОбъект.Наименование = Данные.Наименование;
	ПередаваемыйОбъект.ПометкаУдаления = Данные.ПометкаУдаления;
	
	ПередаваемыйОбъект.Владелец = ПолучитьОбъектXDTO(Данные.Владелец, КоличествоОбъектов);
	
	Если ЗначениеЗаполнено(Данные.СпециализацияВрача) Тогда
		ПередаваемыйОбъект.СпециализацияВрача = ПолучитьОбъектXDTO(Данные.СпециализацияВрача, КоличествоОбъектов);
	КонецЕсли;
	
	ПередаваемыйОбъект.Телефон = "";
	ПередаваемыйОбъект.АдресЭП = "";
	
	Для каждого ТекСтрока Из Данные.КонтактнаяИнформация Цикл
		Если ТекСтрока.Тип = Перечисления.ТипыКонтактнойИнформации.Телефон Тогда
			ПередаваемыйОбъект.Телефон = ТекСтрока.Представление;
		ИначеЕсли ТекСтрока.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты Тогда
			ПередаваемыйОбъект.АдресЭП = ТекСтрока.Представление;
		КонецЕсли;
	КонецЦикла;
		
	ПередаваемыйОбъект.Комментарий = Данные.Комментарий;
	
	Возврат ПередаваемыйОбъект;
	
КонецФункции

Функция СериализацияСпециализацияВрача(Данные, КоличествоОбъектов)
	
	ПередаваемыйОбъект = СоздатьОбъектXDTO("СпециализацияВрача");
	ПередаваемыйОбъект.УникальныйИдентификатор = Строка(Данные.Ссылка.УникальныйИдентификатор());
	ПередаваемыйОбъект.Наименование = Данные.Наименование;
	ПередаваемыйОбъект.ПометкаУдаления = Данные.ПометкаУдаления;
	Если ЗначениеЗаполнено(Данные.Родитель) Тогда
		ПередаваемыйОбъект.Родитель = ПолучитьОбъектXDTO(Данные.Родитель, КоличествоОбъектов);
	КонецЕсли;
	Если Данные.ЭтоГруппа Тогда
		ПередаваемыйОбъект.ЭтоГруппа = Истина;
		Возврат ПередаваемыйОбъект;
	Иначе
		ПередаваемыйОбъект.ЭтоГруппа = Ложь;
	КонецЕсли;
	
	Возврат ПередаваемыйОбъект;
	
КонецФункции

Функция СериализацияПроект(Данные, КоличествоОбъектов)
	
	ПередаваемыйОбъект = СоздатьОбъектXDTO("Проекты");
	ПередаваемыйОбъект.УникальныйИдентификатор = Строка(Данные.Ссылка.УникальныйИдентификатор());
	ПередаваемыйОбъект.Наименование = Данные.Наименование;
	ПередаваемыйОбъект.ПометкаУдаления = Данные.ПометкаУдаления;
	ПередаваемыйОбъект.ЛПУ = Данные.ЛПУ;
	ПередаваемыйОбъект.Аптеки = Данные.Аптеки;
	ПередаваемыйОбъект.Цикличность = Данные.Цикличность;
	
	ДобавляемыеСтрокиТип = ПередаваемыйОбъект.Свойства().Получить("ЧекЛист").Тип;
	ДобавляемыеСтроки = ФабрикаXDTO.Создать(ДобавляемыеСтрокиТип);
		
	Для каждого СтрокаТЧ Из Данные.ЧекЛист Цикл
		ДобавляемаяСтрокаТип = ДобавляемыеСтроки.Свойства().Получить("СтрокаЧекЛист").Тип;
		ДобавляемаяСтрока = ФабрикаXDTO.Создать(ДобавляемаяСтрокаТип);
		ДобавляемаяСтрока.Пункт = СтрокаТЧ.Пункт;
		ДобавляемаяСтрока.ТипЗначения = СтрокаТЧ.ТипЗначения;
		ДобавляемыеСтроки.СтрокаЧекЛист.Добавить(ДобавляемаяСтрока);
	КонецЦикла;
	
	ПередаваемыйОбъект.ЧекЛист = ДобавляемыеСтроки;
	
	ДобавляемыеСтрокиТип = ПередаваемыйОбъект.Свойства().Получить("Препараты").Тип;
	ДобавляемыеСтроки = ФабрикаXDTO.Создать(ДобавляемыеСтрокиТип);
		
	Для каждого СтрокаТЧ Из Данные.Препараты Цикл
		ДобавляемаяСтрокаТип = ДобавляемыеСтроки.Свойства().Получить("СтрокаПрепараты").Тип;
		ДобавляемаяСтрока = ФабрикаXDTO.Создать(ДобавляемаяСтрокаТип);
		ДобавляемаяСтрока.Товар = ПолучитьОбъектXDTO(СтрокаТЧ.Товар, КоличествоОбъектов);
		ДобавляемыеСтроки.СтрокаПрепараты.Добавить(ДобавляемаяСтрока);
	КонецЦикла;
	
	ПередаваемыйОбъект.Препараты = ДобавляемыеСтроки;
	
	ДобавляемыеСтрокиТип = ПередаваемыйОбъект.Свойства().Получить("Конкуренты").Тип;
	ДобавляемыеСтроки = ФабрикаXDTO.Создать(ДобавляемыеСтрокиТип);
		
	Для каждого СтрокаТЧ Из Данные.Конкуренты Цикл
		ДобавляемаяСтрокаТип = ДобавляемыеСтроки.Свойства().Получить("СтрокаКонкуренты").Тип;
		ДобавляемаяСтрока = ФабрикаXDTO.Создать(ДобавляемаяСтрокаТип);
		ДобавляемаяСтрока.Товар = ПолучитьОбъектXDTO(СтрокаТЧ.Товар, КоличествоОбъектов);
		ДобавляемыеСтроки.СтрокаКонкуренты.Добавить(ДобавляемаяСтрока);
	КонецЦикла;
	
	ПередаваемыйОбъект.Конкуренты = ДобавляемыеСтроки;
	
	Возврат ПередаваемыйОбъект;
	
КонецФункции

Функция СериализацияТовар(Данные, КоличествоОбъектов)
	
	ПередаваемыйОбъект = СоздатьОбъектXDTO("Товары");
	ПередаваемыйОбъект.УникальныйИдентификатор = Строка(Данные.Ссылка.УникальныйИдентификатор());
	ПередаваемыйОбъект.Наименование = Данные.Наименование;
	ПередаваемыйОбъект.ПометкаУдаления = Данные.ПометкаУдаления;
	Если ЗначениеЗаполнено(Данные.Родитель) Тогда
		ПередаваемыйОбъект.Родитель = ПолучитьОбъектXDTO(Данные.Родитель, КоличествоОбъектов);
	КонецЕсли;
	Если Данные.ЭтоГруппа Тогда
		ПередаваемыйОбъект.ЭтоГруппа = Истина;
		Возврат ПередаваемыйОбъект;
	Иначе
		ПередаваемыйОбъект.ЭтоГруппа = Ложь;
	КонецЕсли;
	ПередаваемыйОбъект.Артикул = Данные.Артикул;
	ПередаваемыйОбъект.Штрихкод = Данные.Штрихкод;
	ПередаваемыйОбъект.Комментарий = Данные.Комментарий;
		
	Возврат ПередаваемыйОбъект;
	
КонецФункции

Функция СериализацияВидМероприятия(Данные, КоличествоОбъектов)
	
	ПередаваемыйОбъект = СоздатьОбъектXDTO("ВидыМероприятий");
	ПередаваемыйОбъект.УникальныйИдентификатор = Строка(Данные.Ссылка.УникальныйИдентификатор());
	ПередаваемыйОбъект.Наименование = Данные.Наименование;
	ПередаваемыйОбъект.ПометкаУдаления = Данные.ПометкаУдаления;
	ПередаваемыйОбъект.Владелец = ПолучитьОбъектXDTO(Данные.Владелец, КоличествоОбъектов);
		
	Возврат ПередаваемыйОбъект;
	
КонецФункции

#КонецОбласти

#Область Документы

Функция СериализацияВизит(Данные, КоличествоОбъектов)
	
	ПередаваемыйОбъект = СоздатьОбъектXDTO("Визиты");
		
	ПередаваемыйОбъект.УникальныйИдентификатор = Строка(Данные.Ссылка.УникальныйИдентификатор());
	ПередаваемыйОбъект.ПометкаУдаления = Данные.ПометкаУдаления;
	ПередаваемыйОбъект.Проведен = Данные.Проведен;
	Если ЗначениеЗаполнено(Данные.Операция) Тогда
		ПередаваемыйОбъект.Операция = ПолучитьОбъектXDTO(Данные.Операция, КоличествоОбъектов);
	КонецЕсли;
	ПередаваемыйОбъект.Номер = Данные.Номер;
	ПередаваемыйОбъект.Дата = Данные.Дата;
	ПередаваемыйОбъект.Комментарий = Данные.Комментарий;
	ПередаваемыйОбъект.ВидВизита = ПолучитьОбъектXDTO(Данные.ВидВизита, КоличествоОбъектов);
	ПередаваемыйОбъект.Проект = ПолучитьОбъектXDTO(Данные.Проект, КоличествоОбъектов);
	ПередаваемыйОбъект.Контрагент = ПолучитьОбъектXDTO(Данные.Контрагент, КоличествоОбъектов);
	ПередаваемыйОбъект.КонтактноеЛицо = ПолучитьОбъектXDTO(Данные.КонтактноеЛицо, КоличествоОбъектов);
	ПередаваемыйОбъект.СостояниеВизита = ПолучитьОбъектXDTO(Данные.СостояниеВизита, КоличествоОбъектов);
	
	ПередаваемыйОбъект.ГеоМеткаНачало = ПолучитьКоординаты(Данные.ГеоМеткаНачало.Получить());
	ПередаваемыйОбъект.ДатаНачало = Данные.ДатаНачало;
	ПередаваемыйОбъект.ГеоМеткаОкончание = ПолучитьКоординаты(Данные.ГеоМеткаОкончание.Получить());
	ПередаваемыйОбъект.ДатаОкончание = Данные.ДатаОкончание;
	
	ПередаваемыйОбъект.Оценка = Данные.Оценка;
	
	ПередаваемыйОбъект.Ответственный = Данные.Ответственный.Наименование;
	
	ДобавляемыеСтрокиТип = ПередаваемыйОбъект.Свойства().Получить("ЧекЛист").Тип;
	ДобавляемыеСтроки = ФабрикаXDTO.Создать(ДобавляемыеСтрокиТип);
		
	Для каждого СтрокаТЧ Из Данные.ЧекЛист Цикл
		ДобавляемаяСтрокаТип = ДобавляемыеСтроки.Свойства().Получить("СтрокаЧекЛист").Тип;
		ДобавляемаяСтрока = ФабрикаXDTO.Создать(ДобавляемаяСтрокаТип);
		ДобавляемаяСтрока.Пункт = СтрокаТЧ.Пункт;
		ДобавляемаяСтрока.ТипЗначения = СтрокаТЧ.ТипЗначения;
		ДобавляемаяСтрока["Значение"+СтрокаТЧ.ТипЗначения] = СтрокаТЧ.Значение;
		ДобавляемыеСтроки.СтрокаЧекЛист.Добавить(ДобавляемаяСтрока);
	КонецЦикла;

	ПередаваемыйОбъект.ЧекЛист = ДобавляемыеСтроки;
	
	ДобавляемыеСтрокиТип = ПередаваемыйОбъект.Свойства().Получить("Препараты").Тип;
	ДобавляемыеСтроки = ФабрикаXDTO.Создать(ДобавляемыеСтрокиТип);
		
	Для каждого СтрокаТЧ Из Данные.Препараты Цикл
		ДобавляемаяСтрокаТип = ДобавляемыеСтроки.Свойства().Получить("СтрокаПрепараты").Тип;
		ДобавляемаяСтрока = ФабрикаXDTO.Создать(ДобавляемаяСтрокаТип);
		ДобавляемаяСтрока.Товар = ПолучитьОбъектXDTO(СтрокаТЧ.Товар, КоличествоОбъектов);
		ДобавляемаяСтрока.Матрица = СтрокаТЧ.Матрица;
		ДобавляемаяСтрока.Наличие = СтрокаТЧ.Наличие;
		ДобавляемаяСтрока.Заказ = СтрокаТЧ.Заказ;
		ДобавляемыеСтроки.СтрокаПрепараты.Добавить(ДобавляемаяСтрока);
	КонецЦикла;

	ПередаваемыйОбъект.Препараты = ДобавляемыеСтроки;
	
	ДобавляемыеСтрокиТип = ПередаваемыйОбъект.Свойства().Получить("Цены").Тип;
	ДобавляемыеСтроки = ФабрикаXDTO.Создать(ДобавляемыеСтрокиТип);
		
	Для каждого СтрокаТЧ Из Данные.Цены Цикл
		ДобавляемаяСтрокаТип = ДобавляемыеСтроки.Свойства().Получить("СтрокаЦены").Тип;
		ДобавляемаяСтрока = ФабрикаXDTO.Создать(ДобавляемаяСтрокаТип);
		ДобавляемаяСтрока.Товар = ПолучитьОбъектXDTO(СтрокаТЧ.Товар, КоличествоОбъектов);
		ДобавляемаяСтрока.Цена = СтрокаТЧ.Цена;
		ДобавляемыеСтроки.СтрокаЦены.Добавить(ДобавляемаяСтрока);
	КонецЦикла;

	ПередаваемыйОбъект.Цены = ДобавляемыеСтроки;
	
	Если ЗначениеЗаполнено(Данные.Картинка.Получить()) Тогда
		ПередаваемыйОбъект.Картинка = ПолучитьКартинку(Данные.Картинка);
	КонецЕсли;
	
	Возврат ПередаваемыйОбъект;
	
КонецФункции

Функция СериализацияМероприятие(Данные, КоличествоОбъектов)
	
	ПередаваемыйОбъект = СоздатьОбъектXDTO("Мероприятия");
		
	ПередаваемыйОбъект.УникальныйИдентификатор = Строка(Данные.Ссылка.УникальныйИдентификатор());
	ПередаваемыйОбъект.ПометкаУдаления = Данные.ПометкаУдаления;
	ПередаваемыйОбъект.Проведен = Данные.Проведен;
	ПередаваемыйОбъект.Номер = Данные.Номер;
	ПередаваемыйОбъект.Дата = Данные.Дата;
	ПередаваемыйОбъект.Комментарий = Данные.Комментарий;
	ПередаваемыйОбъект.ВидМероприятия = ПолучитьОбъектXDTO(Данные.ВидМероприятия, КоличествоОбъектов);
	ПередаваемыйОбъект.Проект = ПолучитьОбъектXDTO(Данные.Проект, КоличествоОбъектов);
			
	ПередаваемыйОбъект.Ответственный = Данные.Ответственный.Наименование;
			
	Возврат ПередаваемыйОбъект;
	
КонецФункции

#КонецОбласти

#Область РегистрыСведений

Функция СериализацияПеречисления(Данные, КоличествоОбъектов)
	
	//теперь получаем как названо перечисление в конфигураторе
	ИмяПеречисления = Данные.Метаданные().Имя;
	
	//теперь получим индекс где хранится то что нам надо
	НужныйИндекс = Перечисления[ИмяПеречисления].Индекс(Данные);
	
	ПередаваемыйОбъект = Метаданные.Перечисления[ИмяПеречисления].ЗначенияПеречисления[НужныйИндекс].Имя;
	
	Возврат ПередаваемыйОбъект;
	
КонецФункции

#КонецОбласти

#Область ПрочиеОбъекты

Функция СериализацияУдалениеОбъекта(Данные, КоличествоОбъектов)
	
	ПередаваемыйОбъект = СоздатьОбъектXDTO("УдалениеОбъекта");
	ПередаваемыйОбъект.УникальныйИдентификатор = Строка(Данные.Ссылка.УникальныйИдентификатор());
	
	Если ТипЗнч(Данные.Ссылка) = Тип("СправочникСсылка.Контрагенты") Тогда
		ПередаваемыйОбъект.Тип = "Контрагенты";
	ИначеЕсли ТипЗнч(Данные.Ссылка) = Тип("СправочникСсылка.КонтактныеЛица") Тогда
		ПередаваемыйОбъект.Тип = "КонтактныеЛица";
	ИначеЕсли ТипЗнч(Данные.Ссылка) = Тип("СправочникСсылка.СпециализацияВрача") Тогда
		ПередаваемыйОбъект.Тип = "СпециализацияВрача";
	ИначеЕсли ТипЗнч(Данные.Ссылка) = Тип("СправочникСсылка.ВидыМероприятий") Тогда
		ПередаваемыйОбъект.Тип = "ВидыМероприятий";
	ИначеЕсли ТипЗнч(Данные.Ссылка) = Тип("СправочникСсылка.Товары") Тогда
		ПередаваемыйОбъект.Тип = "Товары";
	ИначеЕсли ТипЗнч(Данные.Ссылка) = Тип("ДокументСсылка.Визит") Тогда
		ПередаваемыйОбъект.Тип = "Визит";
	ИначеЕсли ТипЗнч(Данные.Ссылка) = Тип("ДокументСсылка.Мероприятие") Тогда
		ПередаваемыйОбъект.Тип = "Мероприятие";
	КонецЕсли;
	
	Возврат ПередаваемыйОбъект;
	
КонецФункции

Функция СериализацияНастроек(Данные, КоличествоОбъектов)
	
	ПередаваемыйОбъект = СоздатьОбъектXDTO("Настройки");
	ПередаваемыйОбъект.Профиль = ПолучитьОбъектXDTO(Данные.Профиль, КоличествоОбъектов);
	ПередаваемыйОбъект.ТекущийПользователь = Данные.Пользователь.Наименование;
		
	Возврат ПередаваемыйОбъект;
	
КонецФункции

Процедура СериализоватьИДобавитьНастройкиВОбъектXDTO(ЗаписьСообщения, ЗаписьXML, ВозвращаемыйСписок, УзелОбмена, НомерСообщенияОчереди, КоличествоОбъектов) Экспорт
	
	КоличествоОбъектов = КоличествоОбъектов + 1;
	ОбъектXDTO = ПолучитьОбъектXDTO(УзелОбмена, КоличествоОбъектов);
	Если ОбъектXDTO <> Неопределено Тогда
		ВозвращаемыйСписок.объекты.Добавить(ОбъектXDTO);
	КонецЕсли;
		
КонецПроцедуры
	
Процедура СериализоватьИДобавитьСправочникиИДокументыВОбъектXDTO(ЗаписьСообщения, ЗаписьXML, ВозвращаемыйСписок, УзелОбмена, НомерСообщенияОчереди, КоличествоОбъектов) Экспорт
	
	ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(УзелОбмена, ЗаписьСообщения.НомерСообщения);
	
	Пока ВыборкаИзменений.Следующий() Цикл
		
		КоличествоОбъектов = КоличествоОбъектов + 1;
		Если КоличествоОбъектов >= ПолучитьКоличествоОбъектовВПакете() Тогда
			
			ФабрикаXDTO.ЗаписатьXML(ЗаписьXML, ВозвращаемыйСписок);
			ЗаписьСообщения.ЗакончитьЗапись();
			СообщениеОбмена = Новый ХранилищеЗначения(ЗаписьXML.Закрыть());
			НомерСообщенияОчереди = НомерСообщенияОчереди + 1;
			ОбменМобильноеПриложениеОбщее.ДобавитьСообщениеВОчередьСообщенийОбмена(УзелОбмена, НомерСообщенияОчереди, СообщениеОбмена);
			
			ЗаписьXML = ОбменМобильноеПриложениеОбщее.ПолучитьЗаписьXMLДляСообщенияОбмена(УзелОбмена, ЗаписьСообщения);
			ВозвращаемыйСписок = ОбменМобильноеПриложениеПравилаВыгрузки.СоздатьОбъектXDTO("Объекты");
			
			КоличествоОбъектов = 0;
			
		КонецЕсли;
		
		Данные = ВыборкаИзменений.Получить();
		
		// Если перенос данных не нужен, то, возможно, необходимо записать удаление данных.
		Если НЕ ОбменМобильноеПриложениеОбщее.НуженПереносДанных(Данные, УзелОбмена) Тогда
			
			// Получаем значение с возможным удалением данных.
			УдалениеДанных(Данные);
			
		КонецЕсли;
		
		ОбъектXDTO = ПолучитьОбъектXDTO(Данные, КоличествоОбъектов);
		Если ОбъектXDTO <> Неопределено Тогда
			ВозвращаемыйСписок.объекты.Добавить(ОбъектXDTO);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // СериализоватьИДобавитьСправочникиИДокументыВОбъектXDTO()

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СоздатьОбъектXDTO(ТипОбъекта) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат ФабрикаXDTO.Создать(ФабрикаXDTO.Тип("http://www.prof-it.ru/ma/MobileExchange", ТипОбъекта));
	
КонецФункции // СоздатьОбъектXDTO()

Функция ПолучитьКоличествоОбъектовВПакете()
	
	Возврат 1000;
	
КонецФункции

Процедура УдалениеДанных(Данные) Экспорт
	
	// Получаем объект описания метаданного, соответствующий данным.
	ОбъектМетаданных = ?(ТипЗнч(Данные) = Тип("УдалениеОбъекта"), Данные.Ссылка.Метаданные(), Данные.Метаданные());
	
	// Проверяем тип, интересуют только те типы, которые реализованы на мобильной платформе.
	Если Метаданные.Справочники.Содержит(ОбъектМетаданных)
		ИЛИ Метаданные.Документы.Содержит(ОбъектМетаданных) Тогда
		
		// Перенос удаления объекта для объектных.
		Данные = Новый УдалениеОбъекта(Данные.Ссылка);
		
	ИначеЕсли Метаданные.РегистрыСведений.Содержит(ОбъектМетаданных)
		ИЛИ Метаданные.РегистрыНакопления.Содержит(ОбъектМетаданных)
		ИЛИ Метаданные.Последовательности.Содержит(ОбъектМетаданных) Тогда
		
		// Очищаем данные.
		Данные.Очистить();
		
	КонецЕсли;
	
КонецПроцедуры // УдалениеДанных()

// Получает картинку.
//
Функция ПолучитьКартинку(Картинка) Экспорт
	
	ДвоичныеДанныеФайла = Картинка.Получить();
	СериализиаторXDTO = Новый СериализаторXDTO(ФабрикаXDTO);
	
	Попытка
		КартинкаXDTO = СериализиаторXDTO.ЗаписатьXDTO(ДвоичныеДанныеФайла);
	Исключение
		КартинкаXDTO = Неопределено;
	КонецПопытки;
	
	Возврат КартинкаXDTO;
	
КонецФункции

// Получает координаты.
//
Функция ПолучитьКоординаты(Координаты)
	
	СериализиаторXDTO = Новый СериализаторXDTO(ФабрикаXDTO);
	
	Попытка
		КоординатыXDTO = СериализиаторXDTO.ЗаписатьXDTO(Координаты);
	Исключение
		КоординатыXDTO = Неопределено;
	КонецПопытки;
	
	Возврат КоординатыXDTO;
	
КонецФункции
#КонецОбласти
