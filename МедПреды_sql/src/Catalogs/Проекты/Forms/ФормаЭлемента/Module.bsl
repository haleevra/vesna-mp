
#Область Формулы

&НаКлиенте
Процедура ФормулыНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Элементы.Классификация.ТекущиеДанные.Формула = Результат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КонструкторФормулТекущейСтроки(Команда)
	
	Если Элементы.Классификация.ТекущиеДанные <> Неопределено Тогда
		
		ПараметрыОткрытия = ПараметрыФормыРедактирования(Элементы.Классификация.ТекущиеДанные.Формула);
		ОбработчикОповещения = Новый ОписаниеОповещения("ФормулыНачалоВыбораЗавершение", ЭтотОбъект);
		ОткрытьФорму("ОбщаяФорма.КонструкторФормул", ПараметрыОткрытия, ЭтотОбъект, , , , ОбработчикОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьФормулу(Команда)
	
	Если Элементы.Классификация.ТекущиеДанные <> Неопределено Тогда
		
		Формула = Элементы.Классификация.ТекущиеДанные.Формула;
		ИндексЭлемента = Объект.Классификация.Индекс(Объект.Классификация.НайтиПоИдентификатору(Элементы.Классификация.ТекущиеДанные.ПолучитьИдентификатор()));
		ОчиститьСообщения();
		РаботаСФормуламиКлиент.ПроверитьФормулуИнтерактивно(Формула, МассивПеременных(), "Объект.Классификация[" + ИндексЭлемента + "].Формула");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция МассивПеременных()
	
	МассивПеременных = Новый Массив();
	
	Для Каждого СтрокаЧекЛиста Из Объект.ЧекЛист Цикл
		Если СтрокаЧекЛиста.ТипЗначения = "Число" Тогда
			МассивПеременных.Добавить(СтрокаЧекЛиста.Пункт);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивПеременных;
	
КонецФункции

&НаКлиенте
Функция ПараметрыФормыРедактирования(Формула)
	
	МассивПеременных = МассивПеременных();
	ЗаголовокПеременныхПроекта = НСтр("ru = 'Доступные переменные проекта'");
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("Формула", Формула);
	СтруктураРезультат.Вставить("Операнды", МассивПеременных);
	СтруктураРезультат.Вставить("ОперандыЗаголовок", ЗаголовокПеременныхПроекта);
	СтруктураРезультат.Вставить("Операторы", АдресХранилищаДереваОператоров);
	
	Возврат СтруктураРезультат;
	
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ПостроитьДеревоОператоров();
КонецПроцедуры

&НаСервере
Процедура ПостроитьДеревоОператоров()
	
	Дерево = РаботаСФормуламиПереопределяемый.ПостроитьДеревоОператоров();
	
	АдресХранилищаДереваОператоров = ПоместитьВоВременноеХранилище(Дерево, УникальныйИдентификатор);
	
КонецПроцедуры

#КонецОбласти
