/////////////////////////////////////////////////////////////////////////////
// ОПИСАНИЕ ИНТЕРФЕЙСОВ

// Интерфейс для регистрации обработки.
// Вызывается при добавлении обработки в справочник "ВнешниеОбработки"
//
// Возвращаемое значение:
// Структура:
// Вид - строка - возможные значения:	"ДополнительнаяОбработка"
//										"ДополнительныйОтчет"
//										"ЗаполнениеОбъекта"
//										"Отчет"
//										"ПечатнаяФорма"
//										"СозданиеСвязанныхОбъектов"
//
// Назначение - массив строк имен объектов метаданных в формате:
//			<ИмяКлассаОбъектаМетаданного>.[ * | <ИмяОбъектаМетаданных>]
//			Например, "Документ.СчетЗаказ" или "Справочник.*"
//			Прим. параметр имеет смысл только для назначаемых обработок
//
// Наименование - строка - наименование обработки, которым будет заполнено
//						наименование справочника по умолчанию - краткая строка для
//						идентификации обработки администратором
//
// Версия - строка - версия обработки в формате <старший номер>.<младший номер>
//					используется при загрузке обработок в информационную базу
// БезопасныйРежим – Булево – Если истина, обработка будет запущена в безопасном режиме.
//							Более подбробная информация в справке.
//
// Информация - Строка- краткая информация по обработке, описание обработки
//
// ВерсияБСП - Строка - Минимальная версия БСП, на которую рассчитывает код
// дополнительной обработки. Номер версии БСП задается в формате «РР.ПП.ВВ.СС»
// (РР – старший номер редакции; ПП – младший номер ре-дакции; ВВ – номер версии; СС – номер сборки).
//
// Команды - ТаблицаЗначений - команды, поставляемые обработкой, одная строка таблицы соотвествует
//							одной команде
//				колонки: 
//				 - Представление - строка - представление команды конечному пользователю
//				 - Идентификатор - строка - идентефикатор команды. В случае печатных форм
//											перечисление через запятую списка макетов
//				 - Использование - строка - варианты запуска обработки:
//						"ОткрытиеФормы" - открыть форму обработки
//						"ВызовКлиентскогоМетода" - вызов клиентского экспортного метода из формы обработки
//						"ВызовСерверногоМетода" - вызов серверного экспортного метода из модуля объекта обработки
//				 - ПоказыватьОповещение – Булево – если Истина, требуется оказывать оповещение при начале
//								и при окончании запуска обработки. Прим. Имеет смысл только
//								при запуске обработки без открытия формы.
//				 - Модификатор – строка - для печатных форм MXL, которые требуется
//										отображать в форме ПечатьДокументов подсистемы Печать
//										требуется установить как "ПечатьMXL"
//
Функция СведенияОВнешнейОбработке() Экспорт
	
	ПараметрыРегистрации = Новый Структура;
	
	ПараметрыРегистрации.Вставить("Вид", "ДополнительныйОтчет");
	ПараметрыРегистрации.Вставить("Назначение", Неопределено);
	ПараметрыРегистрации.Вставить("Наименование", Метаданные().Представление());
	ПараметрыРегистрации.Вставить("Версия", "1.0.1.1");
	ПараметрыРегистрации.Вставить("БезопасныйРежим", Ложь);
	ПараметрыРегистрации.Вставить("Информация", Метаданные().Комментарий);
	ПараметрыРегистрации.Вставить("ВерсияБСП", "2.0.1.3");
	
	ТаблицаКоманд = ПолучитьТаблицуКоманд();
	
	ДобавитьКоманду(ТаблицаКоманд,
					Метаданные().Представление(),
					Метаданные().Имя,
					"ОткрытиеФормы");
	
	ПараметрыРегистрации.Вставить("Команды", ТаблицаКоманд);
	
	Возврат ПараметрыРегистрации;
	
КонецФункции

/////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьТаблицуКоманд()
	
	Команды = Новый ТаблицаЗначений;
	Команды.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("Использование", Новый ОписаниеТипов("Строка"));
	Команды.Колонки.Добавить("ПоказыватьОповещение", Новый ОписаниеТипов("Булево"));
	Команды.Колонки.Добавить("Модификатор", Новый ОписаниеТипов("Строка"));
	
	Возврат Команды;
	
КонецФункции

Процедура ДобавитьКоманду(ТаблицаКоманд, Представление, Идентификатор, Использование, ПоказыватьОповещение = Ложь, Модификатор = "")
	
	НоваяКоманда = ТаблицаКоманд.Добавить();
	НоваяКоманда.Представление = Представление;
	НоваяКоманда.Идентификатор = Идентификатор;
	НоваяКоманда.Использование = Использование;
	НоваяКоманда.ПоказыватьОповещение = ПоказыватьОповещение;
	НоваяКоманда.Модификатор = Модификатор;
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////
// БЛОК СОБСТВЕННЫХ ФУНКЦИЙ ОБРАБОТКИ

//Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
//	
//	СтандартнаяОбработка = Ложь;
//	
//	НастройкиКомпоновки = КомпоновщикНастроек.ПолучитьНастройки();
//	
//	ПараметрПериод	 = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.Элементы.Найти("Период").Значение;
//	МедПредставитель = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.Элементы.Найти("МедПредставитель").Значение;
//	Супервайзер	     = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.Элементы.Найти("Супервайзер").Значение;
//	Регион	         = КомпоновщикНастроек.ПолучитьНастройки().ПараметрыДанных.Элементы.Найти("Регион").Значение;
//	
//	ТекстЗапроса = 
//	"ВЫБРАТЬ
//	|	ДанныеВизитовДляОтчетаОбороты.Период КАК Период,
//	|	ДанныеВизитовДляОтчетаОбороты.Контрагент КАК Контрагент,
//	|	ДанныеВизитовДляОтчетаОбороты.КонтактноеЛицо КАК КонтактноеЛицо,
//	|	ДоступныеПроекты.МедПредставитель КАК МедПредставитель,
//	|	ДоступныеПроекты.Супервайзер КАК Супервайзер,
//	|	ДанныеВизитовДляОтчетаОбороты.Визит.Оценка КАК ДвойнойВизит,
//	|	ДанныеВизитовДляОтчетаОбороты.Визит.Комментарий КАК НаблюденияСупервайзера
//	|ПОМЕСТИТЬ ВТ_ДвойныеВизиты
//	|ИЗ
//	|	РегистрНакопления.ДанныеВизитовДляОтчета.Обороты(
//	|			&ДатаНачала,
//	|			&ДатаОкончания,
//	|			День,
//	|			ВЫБОР
//	|					КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
//	|						ТОГДА ИСТИНА
//	|					ИНАЧЕ Проект = &Проект
//	|				КОНЕЦ
//	|				И ВЫБОР
//	|					КОГДА &Супервайзер = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
//	|						ТОГДА ИСТИНА
//	|					ИНАЧЕ Ответственный = &Супервайзер
//	|				КОНЕЦ
//	|				И ВЫБОР
//	|					КОГДА &Регион = ЗНАЧЕНИЕ(Справочник.БизнесРегионы.ПустаяСсылка)
//	|						ТОГДА ИСТИНА
//	|					ИНАЧЕ Контрагент.БизнесРегион = &Регион
//	|				КОНЕЦ) КАК ДанныеВизитовДляОтчетаОбороты
//	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеПроекты КАК ДоступныеПроекты
//	|		ПО ДанныеВизитовДляОтчетаОбороты.Проект = ДоступныеПроекты.Проект
//	|			И ДанныеВизитовДляОтчетаОбороты.Ответственный = ДоступныеПроекты.Супервайзер
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	ДанныеВизитовДляОтчетаОбороты.Контрагент.БизнесРегион КАК Регион,
//	|	ДоступныеПроекты.Супервайзер КАК Супервайзер,
//	|	ДанныеВизитовДляОтчетаОбороты.Ответственный КАК МедПредставитель,
//	|	ДанныеВизитовДляОтчетаОбороты.Период КАК ДатаВизита,
//	|	ДанныеВизитовДляОтчетаОбороты.Визит.ВидВизита КАК ВидВизита,
//	|	ВТ_ДвойныеВизиты.ДвойнойВизит КАК ДвойнойВизит,
//	|	ВТ_ДвойныеВизиты.НаблюденияСупервайзера КАК НаблюденияСупервайзера,
//	|	ДанныеВизитовДляОтчетаОбороты.КонтактноеЛицо КАК Врач,
//	|	ДанныеВизитовДляОтчетаОбороты.КонтактноеЛицо.СпециализацияВрача КАК СпециализацияВрача,
//	|	ДанныеВизитовДляОтчетаОбороты.Контрагент КАК ЛПУ,
//	|	ЛПУАдрес.Представление КАК Адрес,
//	|	ЛПУТелефон.Представление КАК Телефон,
//	|	ВизитЛояльность.Значение КАК Лояльность,
//	|	ВизитПотенциал.Значение КАК Потенциал,
//	|	ДанныеВизитовДляОтчетаОбороты.Визит.Комментарий КАК КомментарийПредыдущий,
//	|	ДанныеВизитовДляОтчетаОбороты.ПредыдущийВизит.Комментарий КАК КомментарийТекущий,
//	|	ДанныеВизитовДляОтчетаОбороты.Начало КАК ВремяНачала,
//	|	ДанныеВизитовДляОтчетаОбороты.Окончание КАК ВремяОкончания,
//	|	ДанныеВизитовДляОтчетаОбороты.Время КАК Длительность,
//	|	ДанныеВизитовДляОтчетаОбороты.ШиротаОборот КАК Широта,
//	|	ДанныеВизитовДляОтчетаОбороты.ДолготаОборот КАК Долгота
//	|ИЗ
//	|	РегистрНакопления.ДанныеВизитовДляОтчета.Обороты(
//	|			&ДатаНачала,
//	|			&ДатаОкончания,
//	|			День,
//	|			ВЫБОР
//	|					КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
//	|						ТОГДА ИСТИНА
//	|					ИНАЧЕ Проект = &Проект
//	|				КОНЕЦ
//	|				И ВЫБОР
//	|					КОГДА &МедПредставитель = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
//	|						ТОГДА ИСТИНА
//	|					ИНАЧЕ Ответственный = &МедПредставитель
//	|				КОНЕЦ
//	|				И ВЫБОР
//	|					КОГДА &Регион = ЗНАЧЕНИЕ(Справочник.БизнесРегионы.ПустаяСсылка)
//	|						ТОГДА ИСТИНА
//	|					ИНАЧЕ Контрагент.БизнесРегион = &Регион
//	|				КОНЕЦ) КАК ДанныеВизитовДляОтчетаОбороты
//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоступныеПроекты КАК ДоступныеПроекты
//	|		ПО ДанныеВизитовДляОтчетаОбороты.Проект = ДоступныеПроекты.Проект
//	|			И ДанныеВизитовДляОтчетаОбороты.Ответственный = ДоступныеПроекты.МедПредставитель
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Визит.ЧекЛист КАК ВизитПотенциал
//	|		ПО ДанныеВизитовДляОтчетаОбороты.Визит = ВизитПотенциал.Ссылка
//	|			И (ВизитПотенциал.Пункт = ""Потенциал"")
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.Визит.ЧекЛист КАК ВизитЛояльность
//	|		ПО ДанныеВизитовДляОтчетаОбороты.Визит = ВизитЛояльность.Ссылка
//	|			И (ВизитЛояльность.Пункт = ""Лояльность"")
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК ЛПУАдрес
//	|		ПО ДанныеВизитовДляОтчетаОбороты.Контрагент = ЛПУАдрес.Ссылка
//	|			И (ЛПУАдрес.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
//	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты.КонтактнаяИнформация КАК ЛПУТелефон
//	|		ПО ДанныеВизитовДляОтчетаОбороты.Контрагент = ЛПУТелефон.Ссылка
//	|			И (ЛПУТелефон.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Телефон))
//	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ДвойныеВизиты КАК ВТ_ДвойныеВизиты
//	|		ПО ДанныеВизитовДляОтчетаОбороты.Период = ВТ_ДвойныеВизиты.Период
//	|			И ДанныеВизитовДляОтчетаОбороты.Ответственный = ВТ_ДвойныеВизиты.МедПредставитель
//	|			И ДанныеВизитовДляОтчетаОбороты.Контрагент = ВТ_ДвойныеВизиты.Контрагент
//	|			И ДанныеВизитовДляОтчетаОбороты.КонтактноеЛицо = ВТ_ДвойныеВизиты.КонтактноеЛицо"
//	;
//	
//	Запрос = Новый Запрос(ТекстЗапроса);
//	Запрос.УстановитьПараметр("МедПредставитель", МедПредставитель);
//	Запрос.УстановитьПараметр("Супервайзер", Супервайзер);
//	Запрос.УстановитьПараметр("Регион", Регион);
//	Запрос.УстановитьПараметр("ДатаНачала", НачалоДня(ПараметрПериод.ДатаНачала));
//	Запрос.УстановитьПараметр("ДатаОкончания", КонецДня(ПараметрПериод.ДатаОкончания));
//	
//	ТаблицаДанных = Запрос.Выполнить().Выгрузить();
//	
//	//ТД = Новый ТабличныйДокумент;
//	//Построитель = Новый ПостроительОтчета;
//	//Построитель.ИсточникДанных=Новый ОписаниеИсточникаДанных(ТаблицаДанных);       
//	//Построитель.Вывести(ТД);
//	//ТД.Показать();

//	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
//	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки, ДанныеРасшифровки);
//	
//	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
//	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, Новый Структура("ТаблицаДанных", ТаблицаДанных), ДанныеРасшифровки);
//	
//	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
//	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
//	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
//		
//КонецПроцедуры
